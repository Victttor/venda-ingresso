// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  first_name String?
  last_name  String?
  password   String
  is_admin   Boolean    @default(false)
  Cliente    Cliente[]
  @@map("users")
}

model Cliente {
  id                  String                @id @default(uuid())
  user                User                  @relation(fields: [user_id], references: [id])
  user_id             String                @unique
  address1            String?
  city                String?
  state               String?
  cep                 String?
  phone               String?

  @@map("clientes")
}

model Evento {
  id         String     @id @default(uuid())
  nome       String     @unique
  dataEvento       DateTime  
  local      String
  descricao  String

  @@map("eventos")
}

model Categ_Ingresso {
  id          String    @id @default(uuid())
  tipo        String
  descricao  String

  @@map("categ_ingressos")
}

model Lote_Ingresso {
  id           String    @id @default(uuid())
  nomeIngresso  String
  first_lote   Int
  sec_lote     Int

  
  @@map("lote_ingressos")
}

model Ingresso {
  id         String  @id @default(uuid())
  nome       String
  quantidade Int
  descricao  String

  @@map("ingressos")
}

model Log_Venda {
  id         String  @id @default(uuid())
  quantIngresVend Int
  valorTotal Float

  @@map("log_vendas")
}
